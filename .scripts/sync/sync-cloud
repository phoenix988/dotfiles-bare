#!/bin/bash
##____  _                      _
#|  _ \| |__   ___   ___ _ __ (_)_  __
#| |_) | '_ \ / _ \ / _ \ '_ \| \ \/ /
#|  __/| | | | (_) |  __/ | | | |>  <
#|_|   |_| |_|\___/ \___|_| |_|_/_/\_\
#
# -*- coding: utf-8 -*-

#script that will compare all my config files and scripts to keep them up to date
#if it detect one change its gonna update to all my locations so I always have the latest version
#in my github repos etc
YANDEX_PATH="$HOME/Yandex.Disk"
HOME_FIX=$HOME/home


declare -A files

# dmscripts
#files[$HOME/.dmenu]="$YANDEX_PATH/.dmenu"
#files[$HOME/.config]="$YANDEX_PATH/home/.config"

# Scripts
#files[$HOME/.scripts/activated]="$YANDEX_PATH/.scripts/activated"
#files[$HOME/.scripts/restart]="$YANDEX_PATH/.scripts/restart"
#files[$HOME/.scripts/backup-scripts/sync]="$YANDEX_PATH/.scripts/backup-scripts/sync"
#files[$HOME/.scripts/backup-scripts/btrfs]="$YANDEX_PATH/.scripts/backup-scripts/btrfs"
#files[$HOME/.scripts/backup-scripts/yandex-script]="$YANDEX_PATH/.scripts/yandex-script"

# Docker
#files[$HOME/.scripts/docker]="$YANDEX_PATH/home/.scripts/docker"

# Alias files
#files[$HOME/Documents/lists]="$YANDEX_PATH/home/Documents/lists"

# Config files
files[$HOME/.zshrc]="$YANDEX_PATH/home/.zshrc"
files[$HOME/.config/bash]="$YANDEX_PATH/home/.config/bash"
files[$HOME/.config/starship.toml]="$YANDEX_PATH/home/.config/starship.toml"
#files[$HOME/.config/qtile/config.py]="$YANDEX_PATH/home/.config/qtile/config.py"
#files[$HOME/.config/qtile/autostart.sh]="$YANDEX_PATH/home/.config/qtile/autostart.sh"
#files[$HOME/.config/hypr]="$YANDEX_PATH/home/.config/hypr"
#files[$HOME/.config/waybar/config.jsonc]="$YANDEX_PATH/home/.config/waybar/config.jsonc"
#files[$HOME/.config/waybar/style.css]="$YANDEX_PATH/home/.config/waybar/style.css"
#files[$HOME/.config/doom]="$YANDEX_PATH/home/.config/doom"
#files[$HOME/.config/oh-my-zsh/aliases.sh]="$YANDEX_PATH/home/.config/oh-my-zsh/aliases.sh"
#files[$HOME/.tmux.conf.local]="$YANDEX_PATH/home/.tmux.conf.local"

for COMPARE in $(printf '%s\n' "${!files[@]}") ; do

if [ -d $COMPARE ] ; then

SOURCE=$(printf '%s\n' $(printf '%s\n' "${files["${COMPARE}"]}") )



for SOURCE_LOOP in $(ls  $SOURCE/* ) ; do


DEST=$(echo $SOURCE_LOOP | sed -e "s|$YANDEX_PATH|$HOME|"  )

if cmp --quiet $DEST $SOURCE_LOOP ; then

    printf '%s\n' "No Change Detected: $DEST"

else

CHECK_FOR_LATEST=$(ls -lt  $DEST $SOURCE_LOOP 2> /dev/null | head -n1 | awk '{print $NF}')

if [ "$CHECK_FOR_LATEST" = "$DEST" ] ; then

    LATEST=$(echo $CHECK_FOR_LATEST)
    OLDEST=$(echo $SOURCE_LOOP)



elif [ "$CHECK_FOR_LATEST" = "$SOURCE_LOOP" ] ; then

    LATEST=$(echo $CHECK_FOR_LATEST)
    OLDEST=$(echo $DEST)

fi

SAME_NAME_OLDEST=$(echo $OLDEST | awk  -F / '{print $NF}')
SAME_NAME_LATEST=$(echo $LATEST | awk  -F / '{print $NF}')


if [ "$SAME_NAME_OLDEST" = "$SAME_NAME_LATEST" ] ; then

#cp -r $LATEST $OLDEST 2> /dev/null

printf '%s\n' "Moving: $LATEST to $OLDEST"

sleep 1

fi

fi


done


elif [ -f $COMPARE ] ; then


COMPARE_WITH=$(printf '%s\n' "${files["${COMPARE}"]}")

if cmp --quiet $COMPARE $COMPARE_WITH ; then

  printf '%s\n' "No Change Detected: $COMPARE"

else

CHECK_FOR_LATEST=$(ls -lt  $COMPARE_WITH $COMPARE 2> /dev/null | head -n1 | awk '{print $NF}')

if [ "$CHECK_FOR_LATEST" = "$COMPARE" ] ; then

    LATEST=$(echo $CHECK_FOR_LATEST)
    OLDEST=$(echo $COMPARE_WITH)

elif [ "$CHECK_FOR_LATEST" = "$COMPARE_WITH" ] ; then

    LATEST=$(echo $CHECK_FOR_LATEST)
    OLDEST=$(echo $COMPARE)

fi

SAME_NAME_OLDEST=$(echo $OLDEST | awk  -F / '{print $NF}')
SAME_NAME_LATEST=$(echo $LATEST | awk  -F / '{print $NF}')


if [ "$SAME_NAME_OLDEST" = "$SAME_NAME_LATEST" ] ; then

#cp -r $LATEST $OLDEST 2> /dev/null


LATEST=$(echo $LATEST | sed -e "s|$HOME_FIX|$HOME|")
OLDEST=$(echo $OLDEST | sed -e "s|$HOME_FIX|$HOME|")

    printf '%s\n' "Moving: $LATEST to $OLDEST"

sleep 1

fi

fi

fi

done
